OK:    Coreutils 9.1    >= 8.1
OK:    Bash      5.2.15 >= 3.2
OK:    Binutils  2.40   >= 2.13.1
OK:    Bison     3.8.2  >= 2.7
OK:    Diffutils 3.8    >= 2.8.1
OK:    Findutils 4.9.0  >= 4.2.31
OK:    Gawk      5.2.1  >= 4.0.1
OK:    GCC       12.3.0 >= 5.2
OK:    GCC (C++) 12.3.0 >= 5.2
OK:    Grep      3.8    >= 2.5.1a
OK:    Gzip      1.12   >= 1.3.12
OK:    M4        1.4.19 >= 1.4.10
OK:    Make      4.3    >= 4.0
OK:    Patch     2.7.6  >= 2.5.4
OK:    Perl      5.36.0 >= 5.8.8
OK:    Python    3.11.4 >= 3.4
OK:    Sed       4.9    >= 4.1.5
OK:    Tar       1.34   >= 1.22
OK:    Texinfo   6.8    >= 5.0
OK:    Xz        5.4.1  >= 5.0.0
OK:    Linux Kernel 6.2.0 >= 4.19
OK:    Linux Kernel supports UNIX 98 PTY
Aliases:
OK:    awk  is GNU
OK:    yacc is Bison
OK:    sh   is Bash
Compiler check:
OK:    g++ works
OK: nproc reports 12 logical cores are available


https://unix.stackexchange.com/questions/442510/how-to-use-bash-for-sh-in-ubuntu/442518#442518
Changed sh from dash to bash

https://man.archlinux.org/man/cfdisk.8

https://lfs.fsf.org.cn/museum/lfs-museum/1.0/LFS-HOWTO-1.0-HTML/LFS-HOWTO-1.0-3.html

https://www.digitalocean.com/community/tutorials/create-a-partition-in-linux
sudo fdisk -l
sudo fdisk /dev/sdb

Device     Boot     Start        End    Sectors   Size Id Type
/dev/sdb1            2048  929521663  929519616 443.2G  7 HPFS/NTFS/exFAT

 19 Linux swap                     0657FD6D-A4AB-43C4-84E5-0933C84B4F4F
 20 Linux filesystem               0FC63DAF-8483-4772-8E79-3D69D8477DE4
 21 Linux server data              3B8F8425-20E0-4F3B-907F-1A25A76F98E8
 22 Linux root (x86)               44479540-F297-41B2-9AF7-D131D5F0458A
 23 Linux root (x86-64)            4F68BCE3-E8CD-4DB1-96E7-FBCAF984B709
 24 Linux root (Alpha)             6523F8AE-3EB1-4E2A-A05A-18B695AE656F
 25 Linux root (ARC)               D27F46ED-2919-4CB8-BD25-9531F3C16534
 26 Linux root (ARM)               69DAD710-2CE4-4E3C-B16C-21A1D49ABED3
 27 Linux root (ARM-64)            B921B045-1DF0-41C3-AF44-4C6F280D3FAE
 28 Linux root (IA-64)             993D8D3D-F80E-4225-855A-9DAF8ED7EA97
 29 Linux root (LoongArch-64)      77055800-792C-4F94-B39A-98C91B762BB6
 30 Linux root (MIPS-32 LE)        37C58C8A-D913-4156-A25F-48B1B64E07F0
 31 Linux root (MIPS-64 LE)        700BDA43-7A34-4507-B179-EEB93D7A7CA3
 32 Linux root (PPC)               1DE3F1EF-FA98-47B5-8DCD-4A860A654D78
 33 Linux root (PPC64)             912ADE1D-A839-4913-8964-A10EEE08FBD2
 34 Linux root (PPC64LE)           C31C45E6-3F39-412E-80FB-4809C4980599
 35 Linux root (RISC-V-32)         60D5A7FE-8E7D-435C-B714-3DD8162144E1
 36 Linux root (RISC-V-64)         72EC70A6-CF74-40E6-BD49-4BDA08E8F224
 37 Linux root (S390)              08A7ACEA-624C-4A20-91E8-6E0FA67D23F9
 38 Linux root (S390X)             5EEAD9A9-FE09-4A1E-A1D7-520D00531306
 39 Linux root (TILE-Gx)           C50CDD70-3862-4CC3-90E1-809A8C93EE2C
 40 Linux reserved                 8DA63339-0007-60C0-C436-083AC8230908
 41 Linux home                     933AC7E1-2EB4-4F13-B844-0E14E2AEF915
 42 Linux RAID                     A19D880F-05FC-4D3B-A006-743F0F84911E
 43 Linux LVM                      E6D6D379-F507-44C2-A23C-238F2A3DF928
 44 Linux variable data            4D21B016-B534-45C2-A9FB-5C16E091FD2D
 45 Linux temporary data           7EC6F557-3BC5-4ACA-B293-16EF5DF639D1
 46 Linux /usr (x86)               75250D76-8CC6-458E-BD66-BD47CC81A812

/dev/sdb2       931723264 1953523711 1021800448 487.2G 83 Linux
/dev/sdb3  *    929521664  931723263    2201600     1G ef EFI (FAT-12/16/32)


sudo mkfs -v -t ext4 /dev/sdc7

(base) george@george-System-Product-Name:~$ echo $LFS
/mnt/lfs

(base) george@george-System-Product-Name:~$ sudo mount -v -t ext4 /dev/sdc7 $LFS
mount: /dev/sdc7 mounted on /mnt/lfs.
“Sticky” means that even if multiple users have write permission on a directory, only the owner of a file can delete the file within a sticky directory. 

chmod is the command and system call used to change the access permissions and the special mode flags

This is what the command line options mean:

-s /bin/bash
This makes bash the default shell for user lfs.

-g lfs
This option adds user lfs to group lfs.

-m
This creates a home directory for lfs.

-k /dev/null
This parameter prevents possible copying of files from a skeleton directory (the default is /etc/skel) by changing the input location to the special null device.

lfs
This is the name of the new user.

chown -v lfs $LFS/{usr{,/*},lib,var,etc,bin,sbin,tools}
case $(uname -m) in
  x86_64) chown -v lfs $LFS/lib64 ;;
esac
making user lfs the owner of directories under $LFS

su - lfs to switch user

